import church =>> False True and or not
              =>> first second
              =>> 0 1 2 plus succ

eat! B *rest := *rest
    | increment! B

assert and False False = False
assert and False True = False
assert and True False = False
assert and True True = True

assert or False False = False
assert or False True = True
assert or True False = True
assert or True True = True

assert not True = False
assert not False = True

assert first <1> <2> = <1>
assert second <1> <2> = <2>

assert {0 should not apply a function}
    0 (first False) True = True

assert {1 should apply function once}
    1 (first False) True = False

assert {0 plus 0 should not apply a function}
    plus 0 0 (first False) True = True

assert {0 plus 1 should apply function once}
    plus 0 1 (first False) True = False

assert {1 plus 1 should increment the box 2 times}
    plus 1 1 (eat! #a) () = ()
    | equals! #a <2>

assert {2 plus 2 should increment the box 4 times}
    plus 2 2 (eat! #b) () = ()
    | equals! #b <4>