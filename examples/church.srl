module Church

True a b := a
False a b := b

and A B := A B A
or A B := A A B
not A := A False True

first a b := a
second a b := b

0 f x := x
1 f x := f x
2 f x := f (f x)
3 f x := f (f (f x))

plus A B f x := A f (B f x)
succ A f x := f (A f x)
mul A B f x := A (B f) x
exp A B := B A
minus A B := B pred A

id x := x
first x y := x
inc f g h := h (g f)
pred A f x := A (inc f) (first x) id

is-zero A := A (first False) True